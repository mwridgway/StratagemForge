# podman-compose.yml

services:
  # Relational DB
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-stratagems}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - POSTGRES_DB=${POSTGRES_DB:-stratagems_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stratagem-network
    restart: unless-stopped

  # User Service (Go)
  user-service:
    container_name: user-service
    build:
      context: ./services/user-service
    ports:
      - "8081:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://${POSTGRES_USER:-stratagems}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-stratagems_db}?sslmode=disable
    depends_on:
      - postgres
    networks:
      - stratagem-network
    restart: unless-stopped

  # Demo Analysis Service (Python)
  analysis-service:
    container_name: analysis-service
    build:
      context: ./services/analysis-service
    ports:
      - "8082:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://${POSTGRES_USER:-stratagems}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-stratagems_db}?sslmode=disable
      - DATA_PATH=/app/data
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
    networks:
      - stratagem-network
    restart: unless-stopped

  # Ingestion Service (Go)
  ingestion-service:
    container_name: ingestion-service
    build:
      context: ./services/ingestion-service
    ports:
      - "8083:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://${POSTGRES_USER:-stratagems}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-stratagems_db}?sslmode=disable
      - DATA_PATH=/app/data
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
    networks:
      - stratagem-network
    restart: unless-stopped

  # BFF (Node.js/TypeScript)
  bff:
    container_name: bff
    build:
      context: ./services/bff
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - USER_SERVICE_URL=http://user-service:8080
      - ANALYSIS_SERVICE_URL=http://analysis-service:8080
      - INGESTION_SERVICE_URL=http://ingestion-service:8080
    depends_on:
      - user-service
      - analysis-service
      - ingestion-service
    networks:
      - stratagem-network
    restart: unless-stopped

  # Web Application (React/Next.js)
  web-app:
    container_name: web-app
    build:
      context: ./web-app
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NEXT_PUBLIC_BFF_URL=http://localhost:8080
      - BFF_SERVICE_URL=http://bff:8080
    depends_on:
      - bff
    networks:
      - stratagem-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  stratagem-network:
    driver: bridge